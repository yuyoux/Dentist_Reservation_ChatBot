swagger: "2.0"
info:
  description: "doctor service"
  version: "1.0.0"
  title: "Swagger dentist reservation microservice 1"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: localhost
basePath: "/v1"
schemes:
- "https"
consumes: 
  - application/json
produces: 
  - application/json
  
paths:
  /doctors:
    get:
      operationId: get_doctors
      summary: Get availble dentist list
      tags: 
        - Dentists
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Dentist"
            example:
              - id: 1
                name: "Dr.Michael"
                location: "Uppercampus"
                specialization: "Orthodontics"
                availability: true
              - id: 2
                name: "Dr.Feng"
                location: "Uppercampus"
                specialization: "Paediatric Dentistry"
                availability: false
              - id: 3
                name: "Dr.Lily"
                location: "Uppercampus"
                specialization: "Oral Surgery"
                availability: true
        400:
          description: No dentists available.
          schema:
            $ref: '#/definitions/Error'
  
  /doctors/{doctorsName}:
    get:
      summary: Gets a dentist information by name.
      tags: 
        - Dentists
      parameters:
        - in: path
          name: doctorsName
          type: string
          required: true
          description: Name of the user to get.
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Dentist"
        404:
          description: Dentist not found.
          schema:
            $ref: '#/definitions/Error'

            
        
        
      
        
        
definitions:
  Dentist:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        description: "name"
      location:
        type: "string"
        description: "location"
      specialization:
        type: "string"
        description: "specialization"
      availability:
        type: "boolean"
    xml:
      name: "Dentist"
      
  Error:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
    required:
      - code
      - message
      
responses:
  NotFound:
    description: The specified ID was not correct
    schema:
      $ref: '#/definitions/Error'
  